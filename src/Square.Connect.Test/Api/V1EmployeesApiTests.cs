/* 
 * Square Connect API
 *
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Square.Connect.Client;
using Square.Connect.Api;
using Square.Connect.Model;

namespace Square.Connect.Test
{
    /// <summary>
    ///  Class for testing V1EmployeesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class V1EmployeesApiTests
    {
        private V1EmployeesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new V1EmployeesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of V1EmployeesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' V1EmployeesApi
            //Assert.IsInstanceOfType(typeof(V1EmployeesApi), instance, "instance is a V1EmployeesApi");
        }

        
        /// <summary>
        /// Test CreateEmployee
        /// </summary>
        [Test]
        public void CreateEmployeeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //V1Employee body = null;
            //var response = instance.CreateEmployee(body);
            //Assert.IsInstanceOf<V1Employee> (response, "response is V1Employee");
        }
        
        /// <summary>
        /// Test CreateEmployeeRole
        /// </summary>
        [Test]
        public void CreateEmployeeRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //V1EmployeeRole employeeRole = null;
            //var response = instance.CreateEmployeeRole(employeeRole);
            //Assert.IsInstanceOf<V1EmployeeRole> (response, "response is V1EmployeeRole");
        }
        
        /// <summary>
        /// Test CreateTimecard
        /// </summary>
        [Test]
        public void CreateTimecardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //V1Timecard body = null;
            //var response = instance.CreateTimecard(body);
            //Assert.IsInstanceOf<V1Timecard> (response, "response is V1Timecard");
        }
        
        /// <summary>
        /// Test DeleteTimecard
        /// </summary>
        [Test]
        public void DeleteTimecardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string timecardId = null;
            //var response = instance.DeleteTimecard(timecardId);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ListCashDrawerShifts
        /// </summary>
        [Test]
        public void ListCashDrawerShiftsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string locationId = null;
            //string order = null;
            //string beginTime = null;
            //string endTime = null;
            //var response = instance.ListCashDrawerShifts(locationId, order, beginTime, endTime);
            //Assert.IsInstanceOf<List<V1CashDrawerShift>> (response, "response is List<V1CashDrawerShift>");
        }
        
        /// <summary>
        /// Test ListEmployeeRoles
        /// </summary>
        [Test]
        public void ListEmployeeRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string order = null;
            //int? limit = null;
            //string batchToken = null;
            //var response = instance.ListEmployeeRoles(order, limit, batchToken);
            //Assert.IsInstanceOf<List<V1EmployeeRole>> (response, "response is List<V1EmployeeRole>");
        }
        
        /// <summary>
        /// Test ListEmployees
        /// </summary>
        [Test]
        public void ListEmployeesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string order = null;
            //string beginUpdatedAt = null;
            //string endUpdatedAt = null;
            //string beginCreatedAt = null;
            //string endCreatedAt = null;
            //string status = null;
            //string externalId = null;
            //int? limit = null;
            //string batchToken = null;
            //var response = instance.ListEmployees(order, beginUpdatedAt, endUpdatedAt, beginCreatedAt, endCreatedAt, status, externalId, limit, batchToken);
            //Assert.IsInstanceOf<List<V1Employee>> (response, "response is List<V1Employee>");
        }
        
        /// <summary>
        /// Test ListTimecardEvents
        /// </summary>
        [Test]
        public void ListTimecardEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string timecardId = null;
            //var response = instance.ListTimecardEvents(timecardId);
            //Assert.IsInstanceOf<List<V1TimecardEvent>> (response, "response is List<V1TimecardEvent>");
        }
        
        /// <summary>
        /// Test ListTimecards
        /// </summary>
        [Test]
        public void ListTimecardsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string order = null;
            //string employeeId = null;
            //string beginClockinTime = null;
            //string endClockinTime = null;
            //string beginClockoutTime = null;
            //string endClockoutTime = null;
            //string beginUpdatedAt = null;
            //string endUpdatedAt = null;
            //bool? deleted = null;
            //int? limit = null;
            //string batchToken = null;
            //var response = instance.ListTimecards(order, employeeId, beginClockinTime, endClockinTime, beginClockoutTime, endClockoutTime, beginUpdatedAt, endUpdatedAt, deleted, limit, batchToken);
            //Assert.IsInstanceOf<List<V1Timecard>> (response, "response is List<V1Timecard>");
        }
        
        /// <summary>
        /// Test RetrieveCashDrawerShift
        /// </summary>
        [Test]
        public void RetrieveCashDrawerShiftTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string locationId = null;
            //string shiftId = null;
            //var response = instance.RetrieveCashDrawerShift(locationId, shiftId);
            //Assert.IsInstanceOf<V1CashDrawerShift> (response, "response is V1CashDrawerShift");
        }
        
        /// <summary>
        /// Test RetrieveEmployee
        /// </summary>
        [Test]
        public void RetrieveEmployeeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string employeeId = null;
            //var response = instance.RetrieveEmployee(employeeId);
            //Assert.IsInstanceOf<V1Employee> (response, "response is V1Employee");
        }
        
        /// <summary>
        /// Test RetrieveEmployeeRole
        /// </summary>
        [Test]
        public void RetrieveEmployeeRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleId = null;
            //var response = instance.RetrieveEmployeeRole(roleId);
            //Assert.IsInstanceOf<V1EmployeeRole> (response, "response is V1EmployeeRole");
        }
        
        /// <summary>
        /// Test RetrieveTimecard
        /// </summary>
        [Test]
        public void RetrieveTimecardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string timecardId = null;
            //var response = instance.RetrieveTimecard(timecardId);
            //Assert.IsInstanceOf<V1Timecard> (response, "response is V1Timecard");
        }
        
        /// <summary>
        /// Test UpdateEmployee
        /// </summary>
        [Test]
        public void UpdateEmployeeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string employeeId = null;
            //V1Employee body = null;
            //var response = instance.UpdateEmployee(employeeId, body);
            //Assert.IsInstanceOf<V1Employee> (response, "response is V1Employee");
        }
        
        /// <summary>
        /// Test UpdateEmployeeRole
        /// </summary>
        [Test]
        public void UpdateEmployeeRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleId = null;
            //V1EmployeeRole body = null;
            //var response = instance.UpdateEmployeeRole(roleId, body);
            //Assert.IsInstanceOf<V1EmployeeRole> (response, "response is V1EmployeeRole");
        }
        
        /// <summary>
        /// Test UpdateTimecard
        /// </summary>
        [Test]
        public void UpdateTimecardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string timecardId = null;
            //V1Timecard body = null;
            //var response = instance.UpdateTimecard(timecardId, body);
            //Assert.IsInstanceOf<V1Timecard> (response, "response is V1Timecard");
        }
        
    }

}
