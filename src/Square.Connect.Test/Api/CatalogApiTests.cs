/* 
 * Square Connect API
 *
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Square.Connect.Client;
using Square.Connect.Api;
using Square.Connect.Model;

namespace Square.Connect.Test
{
    /// <summary>
    ///  Class for testing CatalogApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CatalogApiTests
    {
        private CatalogApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CatalogApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CatalogApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CatalogApi
            //Assert.IsInstanceOfType(typeof(CatalogApi), instance, "instance is a CatalogApi");
        }

        
        /// <summary>
        /// Test BatchDeleteCatalogObjects
        /// </summary>
        [Test]
        public void BatchDeleteCatalogObjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchDeleteCatalogObjectsRequest body = null;
            //var response = instance.BatchDeleteCatalogObjects(body);
            //Assert.IsInstanceOf<BatchDeleteCatalogObjectsResponse> (response, "response is BatchDeleteCatalogObjectsResponse");
        }
        
        /// <summary>
        /// Test BatchRetrieveCatalogObjects
        /// </summary>
        [Test]
        public void BatchRetrieveCatalogObjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchRetrieveCatalogObjectsRequest body = null;
            //var response = instance.BatchRetrieveCatalogObjects(body);
            //Assert.IsInstanceOf<BatchRetrieveCatalogObjectsResponse> (response, "response is BatchRetrieveCatalogObjectsResponse");
        }
        
        /// <summary>
        /// Test BatchUpsertCatalogObjects
        /// </summary>
        [Test]
        public void BatchUpsertCatalogObjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BatchUpsertCatalogObjectsRequest body = null;
            //var response = instance.BatchUpsertCatalogObjects(body);
            //Assert.IsInstanceOf<BatchUpsertCatalogObjectsResponse> (response, "response is BatchUpsertCatalogObjectsResponse");
        }
        
        /// <summary>
        /// Test CatalogInfo
        /// </summary>
        [Test]
        public void CatalogInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CatalogInfo();
            //Assert.IsInstanceOf<CatalogInfoResponse> (response, "response is CatalogInfoResponse");
        }
        
        /// <summary>
        /// Test DeleteCatalogObject
        /// </summary>
        [Test]
        public void DeleteCatalogObjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //var response = instance.DeleteCatalogObject(objectId);
            //Assert.IsInstanceOf<DeleteCatalogObjectResponse> (response, "response is DeleteCatalogObjectResponse");
        }
        
        /// <summary>
        /// Test ListCatalog
        /// </summary>
        [Test]
        public void ListCatalogTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cursor = null;
            //string types = null;
            //var response = instance.ListCatalog(cursor, types);
            //Assert.IsInstanceOf<ListCatalogResponse> (response, "response is ListCatalogResponse");
        }
        
        /// <summary>
        /// Test RetrieveCatalogObject
        /// </summary>
        [Test]
        public void RetrieveCatalogObjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //bool? includeRelatedObjects = null;
            //var response = instance.RetrieveCatalogObject(objectId, includeRelatedObjects);
            //Assert.IsInstanceOf<RetrieveCatalogObjectResponse> (response, "response is RetrieveCatalogObjectResponse");
        }
        
        /// <summary>
        /// Test SearchCatalogObjects
        /// </summary>
        [Test]
        public void SearchCatalogObjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SearchCatalogObjectsRequest body = null;
            //var response = instance.SearchCatalogObjects(body);
            //Assert.IsInstanceOf<SearchCatalogObjectsResponse> (response, "response is SearchCatalogObjectsResponse");
        }
        
        /// <summary>
        /// Test UpdateItemModifierLists
        /// </summary>
        [Test]
        public void UpdateItemModifierListsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateItemModifierListsRequest body = null;
            //var response = instance.UpdateItemModifierLists(body);
            //Assert.IsInstanceOf<UpdateItemModifierListsResponse> (response, "response is UpdateItemModifierListsResponse");
        }
        
        /// <summary>
        /// Test UpdateItemTaxes
        /// </summary>
        [Test]
        public void UpdateItemTaxesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateItemTaxesRequest body = null;
            //var response = instance.UpdateItemTaxes(body);
            //Assert.IsInstanceOf<UpdateItemTaxesResponse> (response, "response is UpdateItemTaxesResponse");
        }
        
        /// <summary>
        /// Test UpsertCatalogObject
        /// </summary>
        [Test]
        public void UpsertCatalogObjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpsertCatalogObjectRequest body = null;
            //var response = instance.UpsertCatalogObject(body);
            //Assert.IsInstanceOf<UpsertCatalogObjectResponse> (response, "response is UpsertCatalogObjectResponse");
        }
        
    }

}
